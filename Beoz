local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local aimPart = "Head"
local aimbotEnabled = false
local aimlockTarget = nil
local guiVisible = true

-- === T√¨m ng∆∞·ªùi ch∆°i g·∫ßn gi·ªØa m√†n h√¨nh nh·∫•t ===
local function getTargetInFront()
	local closest = nil
	local shortest = math.huge
	local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(aimPart) then
			local pos, visible = Camera:WorldToViewportPoint(player.Character[aimPart].Position)
			if visible then
				local dist = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude
				if dist < shortest then
					shortest = dist
					closest = player
				end
			end
		end
	end
	return closest
end

-- === T·∫°o GUI GODHUB ===
local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "GODHUB"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 300, 0, 180)
frame.Position = UDim2.new(0.5, -150, 0.5, -90)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.Text = "üí• GODHUB - AIMLOCK"

local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(0.8, 0, 0, 35)
toggleBtn.Position = UDim2.new(0.1, 0, 0.35, 0)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 18
toggleBtn.Text = "üéØ Toggle Aimbot"
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)

local statusLabel = Instance.new("TextLabel", frame)
statusLabel.Size = UDim2.new(1, 0, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0.6, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Text = "Aimbot: OFF | Target: None"

local toggleGuiBtn = Instance.new("TextButton", frame)
toggleGuiBtn.Size = UDim2.new(0.8, 0, 0, 25)
toggleGuiBtn.Position = UDim2.new(0.1, 0, 0.8, 0)
toggleGuiBtn.Text = "üëÅ ·∫®n UI"
toggleGuiBtn.Font = Enum.Font.Gotham
toggleGuiBtn.TextSize = 14
toggleGuiBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
toggleGuiBtn.TextColor3 = Color3.fromRGB(255,255,255)

-- === Ch·∫°y Aimbot khi b·∫≠t ===
RunService.RenderStepped:Connect(function()
	if aimbotEnabled and aimlockTarget and aimlockTarget.Character and aimlockTarget.Character:FindFirstChild(aimPart) then
		Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimlockTarget.Character[aimPart].Position)
	end
end)

-- === Toggle Aimbot ===
toggleBtn.MouseButton1Click:Connect(function()
	aimbotEnabled = not aimbotEnabled
	if aimbotEnabled then
		aimlockTarget = getTargetInFront()
	end
	local name = aimlockTarget and aimlockTarget.Name or "None"
	statusLabel.Text = "Aimbot: " .. (aimbotEnabled and "ON" or "OFF") .. " | Target: " .. name
end)

-- === Toggle UI b·∫±ng n√∫t tr√™n GUI ===
toggleGuiBtn.MouseButton1Click:Connect(function()
	guiVisible = not guiVisible
	frame.Visible = guiVisible
end)

-- === Toggle b·∫±ng ph√≠m t·∫Øt (Insert = b·∫≠t aimbot, RightControl = ·∫©n GUI) ===
UserInputService.InputBegan:Connect(function(input, gp)
	if input.KeyCode == Enum.KeyCode.Insert then
		aimbotEnabled = not aimbotEnabled
		if aimbotEnabled then
			aimlockTarget = getTargetInFront()
		end
		local name = aimlockTarget and aimlockTarget.Name or "None"
		statusLabel.Text = "Aimbot: " .. (aimbotEnabled and "ON" or "OFF") .. " | Target: " .. name
	elseif input.KeyCode == Enum.KeyCode.RightControl then
		guiVisible = not guiVisible
		frame.Visible = guiVisible
	end
end)

print("‚úÖ GODHUB ƒë√£ load v·ªõi Aimbot Lock v√† UI Toggle ƒë·∫ßy ƒë·ªß.")
